syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "Protos/status.proto";
import "Protos/product_photo.proto";

option csharp_namespace = "gRPC_Client";

package product;

// The greeting service definition.
service Product {
  // Sends a greeting
  rpc GetProduct (ProductRequest) returns (ProductProto);
  rpc GetProducts (ProductsRequest) returns (ProductsReply);
  rpc CreateProduct (NewProductProto) returns (status.Status);
  rpc EditProduct (ProductProto) returns (status.Status);
  rpc DeleteProduct (ProductRequest) returns (status.Status);
}

// The request message containing the user's name.
message ProductRequest {
  int64 productId = 1;
}

// The response message containing the greetings.
message ProductProto {
  int64 Id = 1;
  string Name = 2;
  string Description = 3;
  double Cost = 4;
  repeated product_photo.ProductPhotosProto ProductPhotos = 5;
}

message ProductsRequest {
//int?
  google.protobuf.Int32Value pageLength = 1;
  google.protobuf.Int32Value pageNumber = 2; 
  string fieldOrderBy = 3;
  google.protobuf.BoolValue orderByDescending = 4;
}

message ProductsReply {
  PageResponse PageResponse = 1;
  repeated ProductProto Products = 2; 
}
//https://stackoverflow.com/questions/10235854/how-to-serialize-net-exceptions-using-protobuf-net
message NewProductProto
{
  string Name = 1;
  string Description = 2;
  double Cost = 3;
}

message PageResponse
{
  int32 PageLength = 1;
  int32 PageNumber = 2;
  int32 TotalItems = 3;
  int32 TotalPages = 4;
  int32 ItemCount = 5;
}